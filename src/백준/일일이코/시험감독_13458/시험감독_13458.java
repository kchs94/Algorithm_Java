package 백준.일일이코.시험감독_13458;

import java.util.Scanner;

/*
* 문제: 각 시험장마다 응시생들을 모두 감사해야 한다. 이때, 필요한 감독관 수의 최솟값을 구하시오.
* 조건:
* 1. 각각의 시험장에 총감독관은 오직 1명만 있다.
* 2. 부감독관은 여러 명 있어도 된다.
* 3. 각 시험장마다 모든 응시생을 감시해야 한다.
* 입력: 첫째 줄: N(시험장 갯수, 1<=N<=1,000,000) 둘째 줄: A(각 시험자에 있는 응시자 수, 1<=A<=1,000,000). 셋째 줄: B C (총감독관수 부감독관수,
* 1<= B, C<= 1,000,000)
* 출력: 모든 응시생들을 감독하기 위해 필요한 감독관의 최소 수.
* 알고리즘:
* 1.시험장 갯수를 입력받습니다.
* 2.응시자 수를 입력받습니다.
* 3.총감독관과 부감독관이 감시할 수 있는 인원을 각각 입력받습니다.
* 4.감독관 최소 수를 담을 변수 min을 생성합니다.
* 5.시험장 갯수만큼 min에 값을 더하고 각 시험장 별 응시자 수 A에서 총감독관이 감시할 수 있는 B값을 뺍니다.
* 6.남은 각 시험장 응시상을 부감독관이 감시할수 있는 수로 나머지 연산후 나머지가 0일경우 몫만큼 더한다.
* 7.남은 각 시험장 응시상을 부감독관이 감시할수 있는 수로 나머지 연산후 나머지가 0이 아닌경우 몫+1을 한다. 몫이 0일 경우에는 +1만 한다.
* 8.최숫값을 출력한다.
* */
public class 시험감독_13458 {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int N = in.nextInt();   // 시험장 갯수
        int[] A = new int[N];   // 각 시험장 별 응시자 수
        for(int i=0; i<N; i++){
            A[i] = in.nextInt();
        }
        int B = in.nextInt();   // 총감독관이 감시할 수 있는 응시자 수
        int C = in.nextInt();   // 부감독관이 감시할 수 있는 응시자 수

        long min = N;
        for(int i=0; i<N; i++){
            A[i] -= B;
            if(A[i] <0) A[i]=0;
        }
        for(int i=0; i<N; i++){
            if(A[i]%C == 0)
                min += A[i]/C;
            else{
                if(A[i]/C == 0)
                    min++;
                else{
                    min += A[i]/C +1;
                }
            }
        }
        System.out.println(min);
    }
}
